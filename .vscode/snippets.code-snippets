{
	// Place your zig-game workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Memory-Backed Field": {
		"scope": "typescript",
		"prefix": "mbf",
		"body": [
			"get $1() {",
			"  return this.view.get$2($3, true);",
			"}",
			"set $1(value: number) {",
			"  this.view.set$2($3, value, true);",
			"}"
		]
	},
	"Scan/Key Code Entry": {
		"scope": "typescript",
		"prefix": "scan",
		"body": "$1: { scan: SC.SDL_SCANCODE_$2, key: KC.SDLK_$2 },"
	},
	"Card Definition": {
		"scope": "zig",
		"prefix": "dcard",
		"body": "Card{.name=\"$1\",.type=$2,.cost=${3:0},.traits=.{$4},.text=\"$5\",},",
	},
}
